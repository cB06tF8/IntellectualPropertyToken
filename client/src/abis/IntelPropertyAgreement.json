{
  "contractName": "IntelPropertyAgreement",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "agreementID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "digest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "hashFunction",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "ipfsHashSetToNFT",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_digest",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_hashFunction",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_size",
          "type": "uint8"
        }
      ],
      "name": "addAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementID",
          "type": "uint256"
        }
      ],
      "name": "retrieveAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "digest",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "hashFunction",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "size",
              "type": "uint8"
            }
          ],
          "internalType": "struct IntelPropertyAgreement.Multihash",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTotalAgreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"agreementID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"name\":\"ipfsHashSetToNFT\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_hashFunction\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_size\",\"type\":\"uint8\"}],\"name\":\"addAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAgreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementID\",\"type\":\"uint256\"}],\"name\":\"retrieveAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"internalType\":\"struct IntelPropertyAgreement.Multihash\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It's dependent on a js file (see ../util/multihash.js or you can use an equiv.) taking the full IPFS hash  string and parsing it into it's respective parts: bytes32 digest uint8 hashFunction uint8 size Parsing in this way allows the hash to be stored onchain in an efficient manner. Note that this contract could  easily be used for saving any IPFS hash address to a contract that a dApp needs. Here, we're using it for storing  an Agreement file (a signed pdf, for instance) that all parties to an Intellectual Property NFT + an Intellectual  Property RightsHolder ERC20 Token combination have agreed upon. It allows a simple index to be referenced in  other contracts.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAgreement(bytes32,uint8,uint8)\":{\"notice\":\"adds a parsed IPFS hash file to the contract \"},\"getTotalAgreements()\":{\"notice\":\"returns the total number of agreements present in the contract \"},\"retrieveAgreement(uint256)\":{\"notice\":\"returns an IPFS hash by it's ID number. Note that the Multihash will need to be re-combined,  (see ../util/multihash.js). \"}},\"notice\":\"This contract is extremely simple. It adds an IPFS Multihash (by it's 3 distinct parts) to a contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/devroot/Solidity/learning/IntellectualPropertyToken/contracts/IntelPropertyAgreement.sol\":\"IntelPropertyAgreement\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/devroot/Solidity/learning/IntellectualPropertyToken/contracts/IntelPropertyAgreement.sol\":{\"keccak256\":\"0x48a1990b71a244065b1f8b9fe1f8d8d8b6fc8054205ebcc39eda9626619107a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://603fbd8117eefe5234373a664b50570d987b70b0f8ff819a6ac12628cb9d10c4\",\"dweb:/ipfs/QmZmLnZQUDXWCAUx9WJGAvWMv5auGQLbMrjmDpNutCE2So\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610a75806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b4a33d531461008f578063bd933d1b146100ab578063c32f5e95146100c9578063f2fde38b146100f9575b600080fd5b61006f610115565b005b61007961024f565b604051610086919061083f565b60405180910390f35b6100a960048036038101906100a49190610685565b610278565b005b6100b36103ac565b6040516100c091906108ec565b60405180910390f35b6100e360048036038101906100de91906106d4565b6103b6565b6040516100f091906108d1565b60405180910390f35b610113600480360381019061010e919061065c565b61042d565b005b61011d6105d6565b73ffffffffffffffffffffffffffffffffffffffff1661013b61024f565b73ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610188906108b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102806105d6565b73ffffffffffffffffffffffffffffffffffffffff1661029e61024f565b73ffffffffffffffffffffffffffffffffffffffff16146102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb906108b1565b60405180910390fd5b60006001600060025481526020019081526020016000209050838160000181905550828160010160006101000a81548160ff021916908360ff160217905550818160010160016101000a81548160ff021916908360ff1602179055506002547fc7061d9ef2bf5e27eae49fa823eef41bc416fc9df5b7d50b79e234943b93d0218585856040516103869392919061085a565b60405180910390a2600260008154809291906103a19061096b565b919050555050505050565b6000600254905090565b6103be6105de565b600060016000848152602001908152602001600020905080604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff1660ff1660ff1681525050915050919050565b6104356105d6565b73ffffffffffffffffffffffffffffffffffffffff1661045361024f565b73ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a0906108b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051090610891565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b604051806060016040528060008019168152602001600060ff168152602001600060ff1681525090565b600081359050610617816109e3565b92915050565b60008135905061062c816109fa565b92915050565b60008135905061064181610a11565b92915050565b60008135905061065681610a28565b92915050565b60006020828403121561066e57600080fd5b600061067c84828501610608565b91505092915050565b60008060006060848603121561069a57600080fd5b60006106a88682870161061d565b93505060206106b986828701610647565b92505060406106ca86828701610647565b9150509250925092565b6000602082840312156106e657600080fd5b60006106f484828501610632565b91505092915050565b61070681610918565b82525050565b6107158161092a565b82525050565b6107248161092a565b82525050565b6000610737602683610907565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061079d602083610907565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6060820160008201516107e6600085018261070c565b5060208201516107f96020850182610821565b50604082015161080c6040850182610821565b50505050565b61081b81610954565b82525050565b61082a8161095e565b82525050565b6108398161095e565b82525050565b600060208201905061085460008301846106fd565b92915050565b600060608201905061086f600083018661071b565b61087c6020830185610830565b6108896040830184610830565b949350505050565b600060208201905081810360008301526108aa8161072a565b9050919050565b600060208201905081810360008301526108ca81610790565b9050919050565b60006060820190506108e660008301846107d0565b92915050565b60006020820190506109016000830184610812565b92915050565b600082825260208201905092915050565b600061092382610934565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061097682610954565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109a9576109a86109b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6109ec81610918565b81146109f757600080fd5b50565b610a038161092a565b8114610a0e57600080fd5b50565b610a1a81610954565b8114610a2557600080fd5b50565b610a318161095e565b8114610a3c57600080fd5b5056fea264697066735822122074f94d082e1e7e0fd793690be0403c23478215d138c239de22cc3909c4196f0764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b4a33d531461008f578063bd933d1b146100ab578063c32f5e95146100c9578063f2fde38b146100f9575b600080fd5b61006f610115565b005b61007961024f565b604051610086919061083f565b60405180910390f35b6100a960048036038101906100a49190610685565b610278565b005b6100b36103ac565b6040516100c091906108ec565b60405180910390f35b6100e360048036038101906100de91906106d4565b6103b6565b6040516100f091906108d1565b60405180910390f35b610113600480360381019061010e919061065c565b61042d565b005b61011d6105d6565b73ffffffffffffffffffffffffffffffffffffffff1661013b61024f565b73ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610188906108b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102806105d6565b73ffffffffffffffffffffffffffffffffffffffff1661029e61024f565b73ffffffffffffffffffffffffffffffffffffffff16146102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb906108b1565b60405180910390fd5b60006001600060025481526020019081526020016000209050838160000181905550828160010160006101000a81548160ff021916908360ff160217905550818160010160016101000a81548160ff021916908360ff1602179055506002547fc7061d9ef2bf5e27eae49fa823eef41bc416fc9df5b7d50b79e234943b93d0218585856040516103869392919061085a565b60405180910390a2600260008154809291906103a19061096b565b919050555050505050565b6000600254905090565b6103be6105de565b600060016000848152602001908152602001600020905080604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff1660ff1660ff1681525050915050919050565b6104356105d6565b73ffffffffffffffffffffffffffffffffffffffff1661045361024f565b73ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a0906108b1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051090610891565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b604051806060016040528060008019168152602001600060ff168152602001600060ff1681525090565b600081359050610617816109e3565b92915050565b60008135905061062c816109fa565b92915050565b60008135905061064181610a11565b92915050565b60008135905061065681610a28565b92915050565b60006020828403121561066e57600080fd5b600061067c84828501610608565b91505092915050565b60008060006060848603121561069a57600080fd5b60006106a88682870161061d565b93505060206106b986828701610647565b92505060406106ca86828701610647565b9150509250925092565b6000602082840312156106e657600080fd5b60006106f484828501610632565b91505092915050565b61070681610918565b82525050565b6107158161092a565b82525050565b6107248161092a565b82525050565b6000610737602683610907565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061079d602083610907565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6060820160008201516107e6600085018261070c565b5060208201516107f96020850182610821565b50604082015161080c6040850182610821565b50505050565b61081b81610954565b82525050565b61082a8161095e565b82525050565b6108398161095e565b82525050565b600060208201905061085460008301846106fd565b92915050565b600060608201905061086f600083018661071b565b61087c6020830185610830565b6108896040830184610830565b949350505050565b600060208201905081810360008301526108aa8161072a565b9050919050565b600060208201905081810360008301526108ca81610790565b9050919050565b60006060820190506108e660008301846107d0565b92915050565b60006020820190506109016000830184610812565b92915050565b600082825260208201905092915050565b600061092382610934565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061097682610954565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109a9576109a86109b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6109ec81610918565b81146109f757600080fd5b50565b610a038161092a565b8114610a0e57600080fd5b50565b610a1a81610954565b8114610a2557600080fd5b50565b610a318161095e565b8114610a3c57600080fd5b5056fea264697066735822122074f94d082e1e7e0fd793690be0403c23478215d138c239de22cc3909c4196f0764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7535:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:3",
                "type": ""
              }
            ],
            "src": "7:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:3"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:3",
                "type": ""
              }
            ],
            "src": "152:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "349:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "359:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "381:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "368:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "359:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "424:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "397:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "397:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "327:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "335:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "343:5:3",
                "type": ""
              }
            ],
            "src": "297:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "492:85:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "502:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "524:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "511:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "511:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "565:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "540:24:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "540:31:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "540:31:3"
                }
              ]
            },
            "name": "abi_decode_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "470:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "478:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "486:5:3",
                "type": ""
              }
            ],
            "src": "442:135:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "649:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "695:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "704:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "707:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "697:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "697:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "697:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "670:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "679:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "691:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "662:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "662:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "659:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "721:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "736:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "750:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "740:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "765:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "800:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "811:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "796:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "796:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "820:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "775:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "765:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "619:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "630:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "642:6:3",
                "type": ""
              }
            ],
            "src": "583:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "947:448:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "993:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1002:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1005:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "995:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "995:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "995:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "968:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "977:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "964:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "989:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "960:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "957:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1019:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1034:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1038:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1063:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1098:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1109:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1094:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1094:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1118:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1073:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1073:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1063:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1146:116:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1161:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1175:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1165:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1191:61:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1224:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1235:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1220:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1220:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1244:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1201:18:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1201:51:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1191:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1272:116:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1287:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1301:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1291:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1317:61:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1350:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1361:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1346:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1346:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1370:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1327:18:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1327:51:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1317:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint8t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "940:6:3",
                "type": ""
              }
            ],
            "src": "851:544:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1467:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1513:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1522:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1525:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1515:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1515:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1515:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1488:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1497:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1480:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1477:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1539:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1554:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1568:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1558:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1583:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1618:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1629:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1614:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1614:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1638:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1593:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1583:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1437:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1448:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1460:6:3",
                "type": ""
              }
            ],
            "src": "1401:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1751:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1774:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1756:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1744:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1722:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1729:3:3",
                "type": ""
              }
            ],
            "src": "1669:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1848:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1865:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1888:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1870:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1858:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1858:37:3"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1836:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1843:3:3",
                "type": ""
              }
            ],
            "src": "1793:108:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1972:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1989:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2012:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1994:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1982:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1982:37:3"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1960:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1967:3:3",
                "type": ""
              }
            ],
            "src": "1907:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2177:224:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2187:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2253:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2258:2:3",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2194:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2187:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2282:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2287:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2278:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2278:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2291:34:3",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2271:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2347:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2352:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2343:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2343:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2357:8:3",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2336:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2336:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2336:30:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2376:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2387:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2392:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2383:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2376:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2165:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2173:3:3",
                "type": ""
              }
            ],
            "src": "2031:370:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2553:184:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2563:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2629:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2634:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2570:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2563:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2658:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2663:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2654:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2654:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2667:34:3",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2647:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2647:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2647:55:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2712:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2723:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2728:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2719:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2719:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2712:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2541:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2549:3:3",
                "type": ""
              }
            ],
            "src": "2407:330:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2949:567:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2959:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2975:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2980:4:3",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2971:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:14:3"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2963:4:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2995:166:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3032:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3062:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:4:3",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3058:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3058:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3052:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3036:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3122:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3140:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3145:4:3",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3136:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3136:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bytes32_to_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3088:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3088:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3088:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3171:168:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3214:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3244:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3251:4:3",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3240:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3240:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3234:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3234:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3218:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3300:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3318:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3323:4:3",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3314:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3314:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint8_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3270:29:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3270:59:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3270:59:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3349:160:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3384:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3414:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3421:4:3",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3410:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3410:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3404:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3404:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3388:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3470:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3488:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3493:4:3",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3484:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3484:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint8_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3440:29:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3440:59:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3440:59:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Multihash_$12_memory_ptr_to_t_struct$_Multihash_$12_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2936:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2943:3:3",
                "type": ""
              }
            ],
            "src": "2833:683:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3587:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3604:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3627:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3609:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3609:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3597:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3597:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3597:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3575:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3582:3:3",
                "type": ""
              }
            ],
            "src": "3522:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3697:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3714:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3735:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3719:15:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3719:22:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3707:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:35:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3707:35:3"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3685:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3692:3:3",
                "type": ""
              }
            ],
            "src": "3646:102:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3815:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3832:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3853:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3837:15:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3837:22:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3825:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3825:35:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3825:35:3"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3803:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3810:3:3",
                "type": ""
              }
            ],
            "src": "3754:112:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3970:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3980:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3992:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4003:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3988:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3988:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3980:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4060:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4073:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4084:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4069:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4069:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4016:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4016:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4016:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3942:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3954:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3965:4:3",
                "type": ""
              }
            ],
            "src": "3872:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4246:280:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4256:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4268:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4279:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4264:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4264:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4256:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4336:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4349:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4360:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4345:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4345:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4292:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4292:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4292:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4413:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4426:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4437:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4422:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4422:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4373:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4373:68:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4373:68:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4491:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4504:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4515:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4500:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4500:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4451:39:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4451:68:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4451:68:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_uint8__to_t_bytes32_t_uint8_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4202:9:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4214:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4222:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4230:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4241:4:3",
                "type": ""
              }
            ],
            "src": "4100:426:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4703:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4713:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4725:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4736:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4721:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4721:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4713:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4760:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4771:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4756:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4756:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4779:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4785:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4775:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4775:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4749:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4749:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4805:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4939:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4813:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4813:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4805:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4683:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4698:4:3",
                "type": ""
              }
            ],
            "src": "4532:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5128:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5138:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5150:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5161:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5146:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5146:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5138:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5185:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5196:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5181:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5181:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5204:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5210:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5200:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5200:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5174:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5174:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5230:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5364:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5238:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5238:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5230:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5108:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5123:4:3",
                "type": ""
              }
            ],
            "src": "4957:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5530:174:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5540:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5552:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5563:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5548:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5548:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5540:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5670:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5683:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5694:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5679:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5679:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Multihash_$12_memory_ptr_to_t_struct$_Multihash_$12_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5576:93:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5576:121:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5576:121:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Multihash_$12_memory_ptr__to_t_struct$_Multihash_$12_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5502:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5514:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5525:4:3",
                "type": ""
              }
            ],
            "src": "5382:322:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5808:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5818:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5830:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5841:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5826:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5826:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5818:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5898:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5911:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5922:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5907:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5907:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5854:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5854:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5854:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5780:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5792:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5803:4:3",
                "type": ""
              }
            ],
            "src": "5710:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6034:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6051:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6056:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6044:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6044:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6072:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6091:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6096:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6087:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6087:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6072:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6006:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6011:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6022:11:3",
                "type": ""
              }
            ],
            "src": "5938:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6158:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6168:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6197:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6179:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6179:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6168:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6140:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6150:7:3",
                "type": ""
              }
            ],
            "src": "6113:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6260:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6270:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6281:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6270:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6242:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6252:7:3",
                "type": ""
              }
            ],
            "src": "6215:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6343:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6353:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6368:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6375:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6364:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6364:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6353:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6325:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6335:7:3",
                "type": ""
              }
            ],
            "src": "6298:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6475:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6485:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6496:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6485:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6457:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6467:7:3",
                "type": ""
              }
            ],
            "src": "6430:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6556:43:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6566:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6581:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6588:4:3",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6577:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6577:16:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6566:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6538:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6548:7:3",
                "type": ""
              }
            ],
            "src": "6513:86:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6648:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6658:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6685:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6667:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6658:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6781:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6783:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6783:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6783:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6706:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6713:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6703:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6703:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "6700:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6812:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6823:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6830:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6819:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6819:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6812:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6634:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6644:3:3",
                "type": ""
              }
            ],
            "src": "6605:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6872:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6889:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6892:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6882:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6882:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6882:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6986:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6989:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6979:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6979:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6979:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7010:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7013:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7003:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7003:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7003:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6844:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7073:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7130:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7139:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7142:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7132:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7132:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7132:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7096:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7121:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7103:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7103:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7093:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7093:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7086:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7086:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "7083:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7066:5:3",
                "type": ""
              }
            ],
            "src": "7030:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7201:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7258:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7267:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7270:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7260:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7260:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7260:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7224:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7249:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "7231:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7231:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7221:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7221:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7214:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7214:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "7211:2:3"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7194:5:3",
                "type": ""
              }
            ],
            "src": "7158:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7329:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7386:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7395:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7398:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7388:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7388:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7388:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7352:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7377:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "7359:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7359:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7349:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7349:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7342:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "7339:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7322:5:3",
                "type": ""
              }
            ],
            "src": "7286:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7455:77:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7510:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7519:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7522:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7512:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7512:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7512:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7478:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7501:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "7485:15:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7485:22:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7475:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7475:33:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7468:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7468:41:3"
                  },
                  "nodeType": "YulIf",
                  "src": "7465:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7448:5:3",
                "type": ""
              }
            ],
            "src": "7414:118:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    // struct IntelPropertyAgreement.Multihash -> struct IntelPropertyAgreement.Multihash\n    function abi_encode_t_struct$_Multihash_$12_memory_ptr_to_t_struct$_Multihash_$12_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // digest\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // hashFunction\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // size\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_uint8__to_t_bytes32_t_uint8_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Multihash_$12_memory_ptr__to_t_struct$_Multihash_$12_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_struct$_Multihash_$12_memory_ptr_to_t_struct$_Multihash_$12_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "962:1315:0:-:0;;;;;;;;;;;;;867:17:1;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;962:1315:0;;586:96:2;639:7;665:10;658:17;;586:96;:::o;962:1315:0:-;;;;;;;",
  "deployedSourceMap": "962:1315:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:145:1;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1344:427:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2186:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1924:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1700:145;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;1344:427:0:-;1291:12:1;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1442:23:0::1;1470:10;:27;1481:15;;1470:27;;;;;;;;;;;1441:57;;1518:7;1503:5;:12;;:22;;;;1551:13;1530:5;:18;;;:34;;;;;;;;;;;;;;;;;;1582:5;1569;:10;;;:18;;;;;;;;;;;;;;;;;;1620:15;;1603:64;1637:7;1646:13;1661:5;1603:64;;;;;;;;:::i;:::-;;;;;;;;1686:15;;:17;;;;;;;;;:::i;:::-;;;;;;1350:1:1;1344:427:0::0;;;:::o;2186:88::-;2236:4;2254:15;;2247:22;;2186:88;:::o;1924:177::-;1991:16;;:::i;:::-;2015:27;2047:10;:24;2058:12;2047:24;;;;;;;;;;;2014:58;;2084:9;2077:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1924:177;;;:::o;1994:240:1:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:2:-;639:7;665:10;658:17;;586:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:139::-;;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;349:87;;;;:::o;442:135::-;;524:6;511:20;502:29;;540:31;565:5;540:31;:::i;:::-;492:85;;;;:::o;583:262::-;;691:2;679:9;670:7;666:23;662:32;659:2;;;707:1;704;697:12;659:2;750:1;775:53;820:7;811:6;800:9;796:22;775:53;:::i;:::-;765:63;;721:117;649:196;;;;:::o;851:544::-;;;;989:2;977:9;968:7;964:23;960:32;957:2;;;1005:1;1002;995:12;957:2;1048:1;1073:53;1118:7;1109:6;1098:9;1094:22;1073:53;:::i;:::-;1063:63;;1019:117;1175:2;1201:51;1244:7;1235:6;1224:9;1220:22;1201:51;:::i;:::-;1191:61;;1146:116;1301:2;1327:51;1370:7;1361:6;1350:9;1346:22;1327:51;:::i;:::-;1317:61;;1272:116;947:448;;;;;:::o;1401:262::-;;1509:2;1497:9;1488:7;1484:23;1480:32;1477:2;;;1525:1;1522;1515:12;1477:2;1568:1;1593:53;1638:7;1629:6;1618:9;1614:22;1593:53;:::i;:::-;1583:63;;1539:117;1467:196;;;;:::o;1669:118::-;1756:24;1774:5;1756:24;:::i;:::-;1751:3;1744:37;1734:53;;:::o;1793:108::-;1870:24;1888:5;1870:24;:::i;:::-;1865:3;1858:37;1848:53;;:::o;1907:118::-;1994:24;2012:5;1994:24;:::i;:::-;1989:3;1982:37;1972:53;;:::o;2031:370::-;;2194:67;2258:2;2253:3;2194:67;:::i;:::-;2187:74;;2291:34;2287:1;2282:3;2278:11;2271:55;2357:8;2352:2;2347:3;2343:12;2336:30;2392:2;2387:3;2383:12;2376:19;;2177:224;;;:::o;2407:330::-;;2570:67;2634:2;2629:3;2570:67;:::i;:::-;2563:74;;2667:34;2663:1;2658:3;2654:11;2647:55;2728:2;2723:3;2719:12;2712:19;;2553:184;;;:::o;2833:683::-;2980:4;2975:3;2971:14;3069:4;3062:5;3058:16;3052:23;3088:63;3145:4;3140:3;3136:14;3122:12;3088:63;:::i;:::-;2995:166;3251:4;3244:5;3240:16;3234:23;3270:59;3323:4;3318:3;3314:14;3300:12;3270:59;:::i;:::-;3171:168;3421:4;3414:5;3410:16;3404:23;3440:59;3493:4;3488:3;3484:14;3470:12;3440:59;:::i;:::-;3349:160;2949:567;;;:::o;3522:118::-;3609:24;3627:5;3609:24;:::i;:::-;3604:3;3597:37;3587:53;;:::o;3646:102::-;3719:22;3735:5;3719:22;:::i;:::-;3714:3;3707:35;3697:51;;:::o;3754:112::-;3837:22;3853:5;3837:22;:::i;:::-;3832:3;3825:35;3815:51;;:::o;3872:222::-;;4003:2;3992:9;3988:18;3980:26;;4016:71;4084:1;4073:9;4069:17;4060:6;4016:71;:::i;:::-;3970:124;;;;:::o;4100:426::-;;4279:2;4268:9;4264:18;4256:26;;4292:71;4360:1;4349:9;4345:17;4336:6;4292:71;:::i;:::-;4373:68;4437:2;4426:9;4422:18;4413:6;4373:68;:::i;:::-;4451;4515:2;4504:9;4500:18;4491:6;4451:68;:::i;:::-;4246:280;;;;;;:::o;4532:419::-;;4736:2;4725:9;4721:18;4713:26;;4785:9;4779:4;4775:20;4771:1;4760:9;4756:17;4749:47;4813:131;4939:4;4813:131;:::i;:::-;4805:139;;4703:248;;;:::o;4957:419::-;;5161:2;5150:9;5146:18;5138:26;;5210:9;5204:4;5200:20;5196:1;5185:9;5181:17;5174:47;5238:131;5364:4;5238:131;:::i;:::-;5230:139;;5128:248;;;:::o;5382:322::-;;5563:2;5552:9;5548:18;5540:26;;5576:121;5694:1;5683:9;5679:17;5670:6;5576:121;:::i;:::-;5530:174;;;;:::o;5710:222::-;;5841:2;5830:9;5826:18;5818:26;;5854:71;5922:1;5911:9;5907:17;5898:6;5854:71;:::i;:::-;5808:124;;;;:::o;5938:169::-;;6056:6;6051:3;6044:19;6096:4;6091:3;6087:14;6072:29;;6034:73;;;;:::o;6113:96::-;;6179:24;6197:5;6179:24;:::i;:::-;6168:35;;6158:51;;;:::o;6215:77::-;;6281:5;6270:16;;6260:32;;;:::o;6298:126::-;;6375:42;6368:5;6364:54;6353:65;;6343:81;;;:::o;6430:77::-;;6496:5;6485:16;;6475:32;;;:::o;6513:86::-;;6588:4;6581:5;6577:16;6566:27;;6556:43;;;:::o;6605:233::-;;6667:24;6685:5;6667:24;:::i;:::-;6658:33;;6713:66;6706:5;6703:77;6700:2;;;6783:18;;:::i;:::-;6700:2;6830:1;6823:5;6819:13;6812:20;;6648:190;;;:::o;6844:180::-;6892:77;6889:1;6882:88;6989:4;6986:1;6979:15;7013:4;7010:1;7003:15;7030:122;7103:24;7121:5;7103:24;:::i;:::-;7096:5;7093:35;7083:2;;7142:1;7139;7132:12;7083:2;7073:79;:::o;7158:122::-;7231:24;7249:5;7231:24;:::i;:::-;7224:5;7221:35;7211:2;;7270:1;7267;7260:12;7211:2;7201:79;:::o;7286:122::-;7359:24;7377:5;7359:24;:::i;:::-;7352:5;7349:35;7339:2;;7398:1;7395;7388:12;7339:2;7329:79;:::o;7414:118::-;7485:22;7501:5;7485:22;:::i;:::-;7478:5;7475:33;7465:2;;7522:1;7519;7512:12;7465:2;7455:77;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/** @notice This contract is extremely simple. It adds an IPFS Multihash (by it's 3 distinct parts) to a contract.\r\n  * @dev It's dependent on a js file (see ../util/multihash.js or you can use an equiv.) taking the full IPFS hash \r\n  * string and parsing it into it's respective parts:\r\n  * bytes32 digest\r\n  * uint8 hashFunction\r\n  * uint8 size\r\n  * Parsing in this way allows the hash to be stored onchain in an efficient manner. Note that this contract could \r\n  * easily be used for saving any IPFS hash address to a contract that a dApp needs. Here, we're using it for storing \r\n  * an Agreement file (a signed pdf, for instance) that all parties to an Intellectual Property NFT + an Intellectual \r\n  * Property RightsHolder ERC20 Token combination have agreed upon. It allows a simple index to be referenced in \r\n  * other contracts.\r\n*/\r\ncontract IntelPropertyAgreement is Ownable {\r\n\r\n\tstruct Multihash {\r\n\t\tbytes32 digest;\r\n\t\tuint8 hashFunction;\r\n\t\tuint8 size;\r\n  \t}\r\n    \r\n    mapping (uint => Multihash) agreements;\r\n    uint totalAgreements;\r\n    \r\n\tevent ipfsHashSetToNFT (uint indexed agreementID, bytes32 digest, uint8 hashFunction, uint8 size);\r\n\r\n\t/** @notice adds a parsed IPFS hash file to the contract */\r\n\tfunction addAgreement(bytes32 _digest, uint8 _hashFunction, uint8 _size) external onlyOwner {\r\n\t\t(Multihash storage entry) = (agreements[totalAgreements]);\r\n\t\tentry.digest = _digest;\r\n\t\tentry.hashFunction = _hashFunction;\r\n\t\tentry.size = _size;\r\n        emit ipfsHashSetToNFT(totalAgreements, _digest, _hashFunction, _size);        \r\n        totalAgreements++; // increment to reset index for the next incoming agreement\r\n    }\r\n\r\n\t/** @notice returns an IPFS hash by it's ID number. Note that the Multihash will need to be re-combined, \r\n\t  * (see ../util/multihash.js). */\r\n    function retrieveAgreement(uint _agreementID)  public view returns(Multihash memory) {\r\n\t\t(Multihash storage agreement) = (agreements[_agreementID]);\r\n\t\treturn agreement;\r\n    }\r\n\r\n\t/** @notice returns the total number of agreements present in the contract */\r\n\tfunction getTotalAgreements() public view returns(uint) {\r\n\t\treturn totalAgreements;\r\n\t}\r\n}",
  "sourcePath": "C:/devroot/Solidity/learning/IntellectualPropertyToken/contracts/IntelPropertyAgreement.sol",
  "ast": {
    "absolutePath": "/C/devroot/Solidity/learning/IntellectualPropertyToken/contracts/IntelPropertyAgreement.sol",
    "exportedSymbols": {
      "Context": [
        241
      ],
      "IntelPropertyAgreement": [
        108
      ],
      "Ownable": [
        218
      ]
    },
    "id": 109,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 219,
        "src": "60:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 218,
              "src": "997:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "997:7:0"
          }
        ],
        "contractDependencies": [
          218,
          241
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "116:844:0",
          "text": "@notice This contract is extremely simple. It adds an IPFS Multihash (by it's 3 distinct parts) to a contract.\n @dev It's dependent on a js file (see ../util/multihash.js or you can use an equiv.) taking the full IPFS hash \n string and parsing it into it's respective parts:\n bytes32 digest\n uint8 hashFunction\n uint8 size\n Parsing in this way allows the hash to be stored onchain in an efficient manner. Note that this contract could \n easily be used for saving any IPFS hash address to a contract that a dApp needs. Here, we're using it for storing \n an Agreement file (a signed pdf, for instance) that all parties to an Intellectual Property NFT + an Intellectual \n Property RightsHolder ERC20 Token combination have agreed upon. It allows a simple index to be referenced in \n other contracts."
        },
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          218,
          241
        ],
        "name": "IntelPropertyAgreement",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IntelPropertyAgreement.Multihash",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "digest",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "1033:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1033:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "hashFunction",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "1052:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "size",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "1075:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1075:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Multihash",
            "nodeType": "StructDefinition",
            "scope": 108,
            "src": "1011:81:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "agreements",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "1104:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
              "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 13,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1113:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1104:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
                "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash)"
              },
              "valueType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "Multihash",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "1121:9:0"
                },
                "referencedDeclaration": 12,
                "src": "1121:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                  "typeString": "struct IntelPropertyAgreement.Multihash"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "totalAgreements",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "1149:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1149:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "ipfsHashSetToNFT",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementID",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1203:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1229:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1245:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1265:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:74:0"
            },
            "src": "1179:98:0"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1436:335:0",
              "statements": [
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "entry",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1442:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                        "typeString": "struct IntelPropertyAgreement.Multihash"
                      },
                      "typeName": {
                        "id": 42,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41,
                          "name": "Multihash",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "1442:9:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "1442:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 44,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1470:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
                            "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash storage ref)"
                          }
                        },
                        "id": 46,
                        "indexExpression": {
                          "id": 45,
                          "name": "totalAgreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1481:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1470:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                        }
                      }
                    ],
                    "id": 47,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1469:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage",
                      "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1441:57:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49,
                        "name": "entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1503:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "digest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1503:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_digest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1518:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1503:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:22:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 55,
                        "name": "entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1530:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hashFunction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1530:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_hashFunction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1551:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1530:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:34:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61,
                        "name": "entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1569:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1569:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64,
                      "name": "_size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1582:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1569:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "totalAgreements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1620:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 69,
                        "name": "_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1637:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 70,
                        "name": "_hashFunction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1646:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 71,
                        "name": "_size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1661:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 67,
                      "name": "ipfsHashSetToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1603:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint8,uint8)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "EmitStatement",
                  "src": "1598:69:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1686:17:0",
                    "subExpression": {
                      "id": 74,
                      "name": "totalAgreements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1686:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:17:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1282:59:0",
              "text": "@notice adds a parsed IPFS hash file to the contract "
            },
            "functionSelector": "b4a33d53",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39,
                "modifierName": {
                  "id": 38,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 167,
                  "src": "1426:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1426:9:0"
              }
            ],
            "name": "addAgreement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1366:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_hashFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1383:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_size",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1404:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:51:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:0"
            },
            "scope": 108,
            "src": "1344:427:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "2009:92:0",
              "statements": [
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "mutability": "mutable",
                      "name": "agreement",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "2015:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                        "typeString": "struct IntelPropertyAgreement.Multihash"
                      },
                      "typeName": {
                        "id": 88,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87,
                          "name": "Multihash",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "2015:9:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "2015:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 90,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2047:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
                            "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash storage ref)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "id": 91,
                          "name": "_agreementID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "2058:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2047:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                        }
                      }
                    ],
                    "id": 93,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2046:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage",
                      "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2014:58:0"
                },
                {
                  "expression": {
                    "id": 95,
                    "name": "agreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89,
                    "src": "2084:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                      "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 96,
                  "nodeType": "Return",
                  "src": "2077:16:0"
                }
              ]
            },
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1776:142:0",
              "text": "@notice returns an IPFS hash by it's ID number. Note that the Multihash will need to be re-combined, \n (see ../util/multihash.js). "
            },
            "functionSelector": "c32f5e95",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveAgreement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_agreementID",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1951:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1950:19:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1991:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Multihash_$12_memory_ptr",
                    "typeString": "struct IntelPropertyAgreement.Multihash"
                  },
                  "typeName": {
                    "id": 84,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 83,
                      "name": "Multihash",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "1991:9:0"
                    },
                    "referencedDeclaration": 12,
                    "src": "1991:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                      "typeString": "struct IntelPropertyAgreement.Multihash"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:18:0"
            },
            "scope": 108,
            "src": "1924:177:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2242:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "name": "totalAgreements",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2254:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "2247:22:0"
                }
              ]
            },
            "documentation": {
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "2106:77:0",
              "text": "@notice returns the total number of agreements present in the contract "
            },
            "functionSelector": "bd933d1b",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAgreements",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:2:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2236:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:6:0"
            },
            "scope": 108,
            "src": "2186:88:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 109,
        "src": "962:1315:0"
      }
    ],
    "src": "33:2244:0"
  },
  "legacyAST": {
    "absolutePath": "/C/devroot/Solidity/learning/IntellectualPropertyToken/contracts/IntelPropertyAgreement.sol",
    "exportedSymbols": {
      "Context": [
        241
      ],
      "IntelPropertyAgreement": [
        108
      ],
      "Ownable": [
        218
      ]
    },
    "id": 109,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 109,
        "sourceUnit": 219,
        "src": "60:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 218,
              "src": "997:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "997:7:0"
          }
        ],
        "contractDependencies": [
          218,
          241
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "116:844:0",
          "text": "@notice This contract is extremely simple. It adds an IPFS Multihash (by it's 3 distinct parts) to a contract.\n @dev It's dependent on a js file (see ../util/multihash.js or you can use an equiv.) taking the full IPFS hash \n string and parsing it into it's respective parts:\n bytes32 digest\n uint8 hashFunction\n uint8 size\n Parsing in this way allows the hash to be stored onchain in an efficient manner. Note that this contract could \n easily be used for saving any IPFS hash address to a contract that a dApp needs. Here, we're using it for storing \n an Agreement file (a signed pdf, for instance) that all parties to an Intellectual Property NFT + an Intellectual \n Property RightsHolder ERC20 Token combination have agreed upon. It allows a simple index to be referenced in \n other contracts."
        },
        "fullyImplemented": true,
        "id": 108,
        "linearizedBaseContracts": [
          108,
          218,
          241
        ],
        "name": "IntelPropertyAgreement",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IntelPropertyAgreement.Multihash",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "digest",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "1033:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1033:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "hashFunction",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "1052:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1052:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "size",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "1075:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1075:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Multihash",
            "nodeType": "StructDefinition",
            "scope": 108,
            "src": "1011:81:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "agreements",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "1104:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
              "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 13,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1113:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1104:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
                "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash)"
              },
              "valueType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "Multihash",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "1121:9:0"
                },
                "referencedDeclaration": 12,
                "src": "1121:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                  "typeString": "struct IntelPropertyAgreement.Multihash"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "totalAgreements",
            "nodeType": "VariableDeclaration",
            "scope": 108,
            "src": "1149:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1149:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "ipfsHashSetToNFT",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementID",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1203:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1229:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hashFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1245:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1265:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:74:0"
            },
            "src": "1179:98:0"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1436:335:0",
              "statements": [
                {
                  "assignments": [
                    43
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "entry",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "1442:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                        "typeString": "struct IntelPropertyAgreement.Multihash"
                      },
                      "typeName": {
                        "id": 42,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41,
                          "name": "Multihash",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "1442:9:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "1442:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 44,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1470:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
                            "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash storage ref)"
                          }
                        },
                        "id": 46,
                        "indexExpression": {
                          "id": 45,
                          "name": "totalAgreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1481:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1470:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                        }
                      }
                    ],
                    "id": 47,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1469:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage",
                      "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1441:57:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 49,
                        "name": "entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1503:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "digest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "1503:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_digest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1518:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1503:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:22:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 55,
                        "name": "entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1530:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hashFunction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1530:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_hashFunction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1551:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1530:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1530:34:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61,
                        "name": "entry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1569:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "size",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1569:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64,
                      "name": "_size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1582:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1569:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "totalAgreements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1620:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 69,
                        "name": "_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1637:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 70,
                        "name": "_hashFunction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1646:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 71,
                        "name": "_size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1661:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 67,
                      "name": "ipfsHashSetToNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1603:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (uint256,bytes32,uint8,uint8)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "EmitStatement",
                  "src": "1598:69:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1686:17:0",
                    "subExpression": {
                      "id": 74,
                      "name": "totalAgreements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1686:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:17:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1282:59:0",
              "text": "@notice adds a parsed IPFS hash file to the contract "
            },
            "functionSelector": "b4a33d53",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39,
                "modifierName": {
                  "id": 38,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 167,
                  "src": "1426:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1426:9:0"
              }
            ],
            "name": "addAgreement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_digest",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1366:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_hashFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1383:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_size",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1404:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:51:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:0"
            },
            "scope": 108,
            "src": "1344:427:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "2009:92:0",
              "statements": [
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "mutability": "mutable",
                      "name": "agreement",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "2015:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                        "typeString": "struct IntelPropertyAgreement.Multihash"
                      },
                      "typeName": {
                        "id": 88,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87,
                          "name": "Multihash",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "2015:9:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "2015:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                          "typeString": "struct IntelPropertyAgreement.Multihash"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 90,
                          "name": "agreements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2047:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Multihash_$12_storage_$",
                            "typeString": "mapping(uint256 => struct IntelPropertyAgreement.Multihash storage ref)"
                          }
                        },
                        "id": 92,
                        "indexExpression": {
                          "id": 91,
                          "name": "_agreementID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "2058:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2047:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Multihash_$12_storage",
                          "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                        }
                      }
                    ],
                    "id": 93,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2046:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage",
                      "typeString": "struct IntelPropertyAgreement.Multihash storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2014:58:0"
                },
                {
                  "expression": {
                    "id": 95,
                    "name": "agreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89,
                    "src": "2084:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                      "typeString": "struct IntelPropertyAgreement.Multihash storage pointer"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 96,
                  "nodeType": "Return",
                  "src": "2077:16:0"
                }
              ]
            },
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1776:142:0",
              "text": "@notice returns an IPFS hash by it's ID number. Note that the Multihash will need to be re-combined, \n (see ../util/multihash.js). "
            },
            "functionSelector": "c32f5e95",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveAgreement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_agreementID",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1951:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1950:19:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1991:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Multihash_$12_memory_ptr",
                    "typeString": "struct IntelPropertyAgreement.Multihash"
                  },
                  "typeName": {
                    "id": 84,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 83,
                      "name": "Multihash",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "1991:9:0"
                    },
                    "referencedDeclaration": 12,
                    "src": "1991:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Multihash_$12_storage_ptr",
                      "typeString": "struct IntelPropertyAgreement.Multihash"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:18:0"
            },
            "scope": 108,
            "src": "1924:177:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2242:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "name": "totalAgreements",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2254:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 103,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "2247:22:0"
                }
              ]
            },
            "documentation": {
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "2106:77:0",
              "text": "@notice returns the total number of agreements present in the contract "
            },
            "functionSelector": "bd933d1b",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAgreements",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2213:2:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2236:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:6:0"
            },
            "scope": 108,
            "src": "2186:88:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 109,
        "src": "962:1315:0"
      }
    ],
    "src": "33:2244:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xc7061d9ef2bf5e27eae49fa823eef41bc416fc9df5b7d50b79e234943b93d021": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "agreementID",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "digest",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "hashFunction",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "size",
              "type": "uint8"
            }
          ],
          "name": "ipfsHashSetToNFT",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xd88CefF8Fe34e51bAD4a459380907fa006a7b236",
      "transactionHash": "0xc90c3a02cf87639894644db9ce5e21be34504dcbae0b917e63f320ddc98c98e5"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-06T04:34:41.365Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "It's dependent on a js file (see ../util/multihash.js or you can use an equiv.) taking the full IPFS hash  string and parsing it into it's respective parts: bytes32 digest uint8 hashFunction uint8 size Parsing in this way allows the hash to be stored onchain in an efficient manner. Note that this contract could  easily be used for saving any IPFS hash address to a contract that a dApp needs. Here, we're using it for storing  an Agreement file (a signed pdf, for instance) that all parties to an Intellectual Property NFT + an Intellectual  Property RightsHolder ERC20 Token combination have agreed upon. It allows a simple index to be referenced in  other contracts.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAgreement(bytes32,uint8,uint8)": {
        "notice": "adds a parsed IPFS hash file to the contract "
      },
      "getTotalAgreements()": {
        "notice": "returns the total number of agreements present in the contract "
      },
      "retrieveAgreement(uint256)": {
        "notice": "returns an IPFS hash by it's ID number. Note that the Multihash will need to be re-combined,  (see ../util/multihash.js). "
      }
    },
    "notice": "This contract is extremely simple. It adds an IPFS Multihash (by it's 3 distinct parts) to a contract.",
    "version": 1
  }
}